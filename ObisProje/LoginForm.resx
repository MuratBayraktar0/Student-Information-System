<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABOZJREFUWEfdmPtTG1UUxxl/cEb/BEf9VcfxT/AHZ2xJ0kBCBdTBx3TGTvUHLSr9
        wVGntDyGJOTBw9oig1V5tVpBaMEZp3YQSXY3G6Q8Uh5JmaakoOVlyIMkkBzPWW8VOhsaYBNHPzNnZufu
        vd9zdu/Zc+/dnP81qhru+XyzcEZncc5qa4U1lZFL5NUKAb3NOZRb4ygpL4eHWNfsoq7mn8k3O0cK64eD
        lX3+xHkxCJfcMejzJODSRAwaf16C15tGg3lmJ59X7nqUDcsOh0wOtdYshEw/LiT7PUno96YwvPfeBc+6
        ziL0s6GZ52C1/dk8sxBsEQLyQd1nl/GNFta5ohojF823OHm10f4Ck8oMOGUT5qu/J+WC2clo2usHFqHA
        JgY1JuEDJqcsuQbu4MuNw8E+mQDStW/Go4AfVZhmgskqB36p56v6/Lt6e5QKrb+Gt7VV9M0lME1amaxy
        YA7NfT0c2uZsJ2sbCUNx4zAU1rvAdu3u3+0UMGrdYbLKccjEh7+7Ed8WRCqrxzJThIFddS/CrcUIYGpA
        4+CSdK93ahPURi7OZJVDZeASV/CrvD+YLgy6Fd/sOfsqnL4yB280jcJbLWMweScI95heCNHXLPXtntwA
        fNh1JqscGhMfpGJMQTXzAXj7SzcctorwUqML3mwehbJ2N5z76RaM+gIsrO3YfpiFkz0++MoVAsxnH5NV
        Dr1VHG/m/5DeVHEDTt/EIqzHE8z9g7nhX8OHGYGGgSXQW53XmKxyaGv5hlOXbydeOzsKg1PLzG36hKOb
        OLUClF30RtUG/gSTVQ5VDV/16tnrSY2Rh0hsk7ndHZjH8GKdiBpcGZNVDmmXYhElJ3uFxhZhepAWk1UO
        LK6rJ7u8+w6wqncW66CwwmSVQ29xdlT13NzYb4CVvd5NvTUDK8kBwy9P0pNjkYVkknncBTRGjfmbZ+ZX
        SYvJKktutf1pnVnYWAnFmdv0oTE4Nq4yDj3F5DJDUb3ocMysMLfpY59ehuI60c5kMgdO07EPO91rzG/a
        nGh3BzVGx1EmkzmKLI5H9GbhN6d3lbl+MLx3BfAjWygun3iYyWQWtYF7DperyPT8PxuCVExhnwKrEKIx
        bHh20Bg4DSY9XOD8smsyrTYdDj++OQGXOIeaDcsuVNdqej24lRJxt3IT7gZiktE1tRnxHvVh3bPPvaId
        iGxAy4APXsGtFxldUxuR1QBzK51PoMPjOovowIP7PDnfqWjTLepDfXVW0a42Od4lDSanHLg9ehw3mR3a
        WiFS2ukJfzq4DB3XI3C0xQ1tdv9f0cjQNuSHY19MSH3pb0Np50yYNDDg9gPGoceY/P7Apz5M55FPenwx
        2q5v3e5/Ox6DkjMjUNE1I23xo/ixkNH1aWwr+WxE6rN1TPdkHD7uuR3TmviQysjpmJu9oanlygpsriD9
        e9nqZKt9P7UBFXgWOdI0RmdeyY58Pia10T25MWSkqbeJoT0f5HFjWoC1LkyHbTkHStjFsXX62xDCGdIz
        t+lBOUfTSgccOWEljXzQdO8qJ/PNYudH3b6YnGAmDH3Rz6U25n5nqAxoTUJ0p/xR2sgX+UyrBOGBpvR9
        LCVyQpm04x2ekMbAv8PCSE0BFtQGrFlyIpk0+l2CtXaQhZEaLBPzVFjlRDJp5JN8szBSg8UzTMvTv2Lo
        m4XxXyEn50/HQSPVP1ZF3wAAAABJRU5ErkJggg==
</value>
  </data>
</root>